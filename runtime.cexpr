(include "scm_fptr.h")
;;typedef struct scm* (*scm_fptr)();

(struct scm-vector
  (int len)
  (int ref)
  ((* (struct scm)) elt))

(union scm-value
  ;; Immediate values
  (int i) ;; t=0
  ((type scm-fptr) f) ;; t=1

  ;; Allocated values
  ((* (struct scm-vector)) v) ;; t=2, t=3 vector and closure
  )

(struct scm
  (int tag)
  ((union scm-value) val))

(define (void refcount-dec ((struct scm) s))
  (declare int i)
  (declare (* (struct scm-vector)) v)
  (if (\|\| (= 2 (struct-ref s tag)) ;; vector
            (= 3 (struct-ref s tag))) ;; closure
      (begin (set! v (struct-ref (struct-ref s val) v))
             (set! (struct->ref v ref) (- (struct->ref v ref) 1))
             (if (= 0 (struct->ref v ref))
                 (begin (set! i 0)
                        (while (< i (struct->ref v len))
                               (set! i (+ i 1))
                               (refcount-dec (array-ref (struct->ref v elt) i)))
                        (free (struct->ref v elt)))
                        (begin)))
      (begin)))

(define ((struct scm) allocate-vector (int len))
  (declare (* (struct scm-vector)) v)
  (set! v (malloc (sizeof (struct scm-vector))))
  (set! (struct->ref v len) len)
  (set! (struct->ref v ref) 1)
  (set! (struct->ref v elt) (malloc (* (sizeof (struct scm)) len)))
  (return (make-struct (struct scm) (tag 1) (val.v v))))

